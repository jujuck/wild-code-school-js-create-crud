import { Separator } from '@inquirer/core';
type Choice<Value> = {
    name?: string;
    value: Value;
    disabled?: boolean | string;
    checked?: boolean;
    type?: never;
};
declare const _default: <Value extends unknown>(config: {
    message: string | Promise<string> | (() => Promise<string>);
    prefix?: string | undefined;
    pageSize?: number | undefined;
    instructions?: string | boolean | undefined;
    choices: readonly (Separator | Choice<Value>)[];
    loop?: boolean | undefined;
}, context?: import("@inquirer/type").Context | undefined) => import("@inquirer/type").CancelablePromise<Value[]>;
export default _default;
export { Separator };
